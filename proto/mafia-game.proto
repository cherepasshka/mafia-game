syntax = "proto3";

option go_package = "proto/mafia-game";

import "google/protobuf/timestamp.proto";

message User {
    string name = 1;
    Roles role = 2;
}

enum Roles {
    Mafia = 0;
    Commissioner = 1;
    Civilian = 2;
    Undefined = 3;
}

message SessionReadiness {
    bool session_ready = 1;
    Roles role = 2;
    repeated string players = 3;
}

message ConnectToSessionResponse {
    bool success = 1;
    SessionReadiness readiness = 2;
}

message LeaveSessionRequest {
    User user = 1;
}

message LeaveSessionResponse {
    bool success = 1;
}

enum State {
    connected = 0;
    left = 1;
}

message ListConnectionsResponse {
    string login = 1;
    State state = 2;
    google.protobuf.Timestamp time = 3;
    SessionReadiness readiness = 4;
}

message ListConnectionsRequest {
    string login = 1;
}

message VoteForMafiaRequest {
    string mafia_guess = 1;
}

message VoteForMafiaResponse {
    string killed_user = 1;
}

message MoveRequest {
    string target = 1;
}

message MoveResponse {
    bool accepted = 1;
    string reason = 2; // TODO
}

message DayRequest {}

message DayResponse{
    string victim = 1;
}

service MafiaService {
    rpc ConnectToSession(User) returns (ConnectToSessionResponse) {}
    rpc LeaveSession(LeaveSessionRequest) returns (LeaveSessionResponse) {}
    rpc ListConnections(ListConnectionsRequest) returns (stream ListConnectionsResponse) {}
    rpc VoteForMafia(VoteForMafiaRequest) returns (VoteForMafiaResponse) {}
    rpc MakeMove(MoveRequest) returns (MoveResponse) {}
    rpc StartDay(DayRequest) returns (DayResponse) {}
}
